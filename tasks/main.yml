---
- name: "set os-specific variables"
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"

- name: "install required os devel packages"
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ rocksdb_os_devel_packages }}"
  become: yes
  environment: "{{ rocksdb_proxy_env }}"

- name: "prepare build and install directory"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ rocksdb_build_dir }}"
    - "{{ rocksdb_install_dir }}"
    - "{{ rocksdb_install_dir }}/bin"

- name: "download rocksdb source package"
  unarchive:
    src: "{{ rocksdb_sw_release_archive }}"
    dest: "{{ rocksdb_build_dir }}"
    creates: "{{ rocksdb_src_dir }}/Makefile"
    remote_src: yes
    validate_certs: no
  environment: "{{ rocksdb_proxy_env }}"

- name: "compile rocksdb software"
  make:
    chdir: "{{ rocksdb_src_dir }}"
    target: "{{ item }}"
    params:
      DEBUG_LEVEL: 0
  with_items: "{{ rocksdb_make_targets }}"

- name: "install rocksdb software"
  make:
    chdir: "{{ rocksdb_src_dir }}"
    target: install-static
    params:
      INSTALL_PATH: "{{ rocksdb_install_dir }}"
  become: yes

- name: "search for rocksdb tools"
  command: "find {{ rocksdb_src_dir }} {{ rocksdb_src_dir }}/tools -maxdepth 1 -type f -executable"
  register: "rocksdb_sw_tools"
  changed_when: "false"

- name: "install rocksdb tools"
  command: "install -C -m 644 -t {{ rocksdb_install_dir }}/bin/ {{ item }}"
  args:
    creates: "{{ rocksdb_install_dir }}/bin/{{ item|basename }}"
  with_items: "{{ rocksdb_sw_tools.stdout_lines }}"
  become: yes
